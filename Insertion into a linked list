#include<stdio.h>
#include<stdlib.h>

struct Node{
    int data;
    struct Node* next;
};

struct Node* createNode(int data)
{
    struct Node* newNode=(struct Node*)malloc(sizeof(struct Node));
    newNode->next=*head;
    *head=newNode;
}
void InsertAtFirst(struct Node** head, int data)
{
    struct Node* newNode=createNode(data);
    newNode->next=*head;
    *head=newNode;
}
void InsertAtEnd(struct Node** head, int data)
{
    struct Node* newNode=createNode(data);
    if(*head==NULL)
    {
        *head=newNode;
        return;
    }
    struct Node* temp=*head;
    while(temp->next !=NULL)
    {
        temp=temp->next;
    }
    temp->next=newNode;
}
void InsertAtPosition(struct Node** head, int data, int position)
{
    struct Node* newNode=createNode(data);
    
    if(position==0)
    {
        InsertAtFirst(&head, data);
        return;
    }
    struct Node* temp=*head;
    for(int i=0; temp!=NULL && i<position-1; i++)
    {
        temp=temp->next;
    }
    if(temp==NULL)
    {
        printf("position out of range\n");
        free(newNode);
        return;
    }
    newNode->next=temp->next;
    temp->next=newNode;
    
}

void print(struct Node** head)
{
    struct Node* temp=head;
    while(temp!=NULL)
    {
        printf("%d->", temp->data);
        temp=temp->next;
    }
    printf("NULL\n");
}

int main()
{
    struct Node* head= NULL;
    int choice, val, pos;
    
    while(1)
    {
        printf("\n1.Insert at the beginning of linked list\n 2.Insert at the end of the linked list\n 3.Insert at any position\n 4.Display\n 5.Exit\n");
        printf("\nEnter ur choice: ");
        scanf("%d", &choice);

        switch(choice)
        {
            case 1:
            {
                printf("Enter value to insert:\n");
                scanf("%d", &val);
                InsertAtFirst(&head, val);
                break;
            }
            case 2:
            {
                printf("Enter value to insert:\n");
                scanf("%d", &val);
                InsertAtEnd(&head, val);
                break;
            }
            case 3:
            {
                printf("Enter value to insert:\n");
                scanf("%d", &val);
                printf("enter position:\n");
                scanf("%d", &pos);
                InsertAtPosition(&head, val, pos);
                break;
            }

            case 4:
            {
                print(head);
                break;
            }

            case 5:
            {
                printf("Exiting...");
                exit(0);
            }

            default:
            {
                printf("Invalid choice");
            }
        }
       
    }
    return 0;
        
}
